//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.Example
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.Networking;
    using UnityEngine.UI;
    
    
    public class UILoginPanelData : QFramework.UIPanelData
    {
    }
    
    public partial class UILoginPanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as UILoginPanelData ?? new UILoginPanelData();
            // please add init code here
            Login.onClick.AddListener(() =>
            {
                StartCoroutine(LoginClick());
            });

            if (PlayerPrefs.HasKey("access_token"))
            {
                var auth = PlayerPrefs.GetString("access_token");
                StartCoroutine(TestAuth(auth));
            }
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }


        IEnumerator LoginClick()
        {

            var mobile = Mobile.text;
            var google = Google.text;
            var passwd = Passwd.text;

            WWWForm form = new WWWForm();
            form.AddField("mobile",mobile);
            form.AddField("nonce", google);
            form.AddField("password", passwd);
            var webRequest = UnityWebRequest.Post("https://gate.mongomath.com:8443/a/user/login", form);
            //webRequest.SetRequestHeader("Content-Type", "application/json");
            yield return webRequest.SendWebRequest();
            if (webRequest.isNetworkError)
            {
                Debug.Log(": Error: " + webRequest.error);
            }
            else
            {
                Debug.Log(webRequest.downloadHandler.text);
                var token = QF.SerializeHelper.FromJson<AccessToken>(webRequest.downloadHandler.text);
                if(token.access_token != null)
                {
                    PlayerPrefs.SetString("access_token", "Bearer "+token.access_token);
                    UIMgr.OpenPanel("UIActivityPanel", UILevel.Common);
                    UIMgr.ClosePanel("UILoginPanel");
                }
                else
                {
                    MessageBoxV2.AddMessage(webRequest.downloadHandler.text);
                }
            }
        }
        IEnumerator TestAuth(string auth)
        {
            var url = string.Format("https://gate.mongomath.com:8443/admin-course/courses");
            UnityWebRequest webRequest = UnityWebRequest.Get(url);
            webRequest.SetRequestHeader("Authorization", auth);
            webRequest.SetRequestHeader("Content-Type", "application/json");
            yield return webRequest.SendWebRequest();

            if (webRequest.isNetworkError)
            {
                Debug.Log(": Error: " + webRequest.error);
            }
            else
            {
                Debug.Log("kecheng"+webRequest.downloadHandler.text);
                var res = webRequest.downloadHandler.text;
                if (res.IndexOf("·Ç·¨·ÃÎÊ")>-1)
                {

                }
                else
                {
                    UIMgr.OpenPanel("UIActivityPanel", UILevel.Common);
                    UIMgr.ClosePanel("UILoginPanel");
                }
            }
        }
    }
}


class AccessToken
{
    public string access_token;
    public string token_type;
}